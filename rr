#include <stdio.h>

int main() {
    int i, n, time = 0, remain, flag = 0, tq;
    int wait_time = 0, turnaround_time = 0;
    int at[10], bt[10], rt[10]; // at: arrival time, bt: burst time, rt: remaining time

    printf("Enter Total Number of Processes: ");
    scanf("%d", &n);
    remain = n;

    for (i = 0; i < n; i++) {
        printf("Enter Arrival Time and Burst Time for Process P%d: ", i + 1);
        scanf("%d %d", &at[i], &bt[i]);
        rt[i] = bt[i]; // Initialize remaining time
    }

    printf("Enter Time Quantum: ");
    scanf("%d", &tq);

    printf("\nProcess\tTurnaround Time\tWaiting Time\n");

    int count = 0;
    while (remain != 0) {
        flag = 0;
        for (i = 0; i < n; i++) {
            if (at[i] <= time && rt[i] > 0) {
                flag = 1;
                if (rt[i] <= tq) {
                    time += rt[i];
                    rt[i] = 0;
                    count = 1;
                } else {
                    rt[i] -= tq;
                    time += tq;
                }

                if (rt[i] == 0 && count == 1) {
                    remain--;
                    int wt = time - at[i] - bt[i]; // waiting time
                    int tat = time - at[i]; // turnaround time
                    printf("P%d\t%d\t\t%d\n", i + 1, tat, wt);
                    wait_time += wt;
                    turnaround_time += tat;
                    count = 0;
                }
            }
        }

        // If no process was ready to execute
        if (flag == 0) time++;
    }

    printf("\nAverage Waiting Time: %.2f", (float)wait_time / n);
    printf("\nAverage Turnaround Time: %.2f\n", (float)turnaround_time / n);

    return 0;
}
